{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capatalize","msg","Navbar","href","title","id","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","heading","value","onChange","event","console","log","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","mode","setMode","setAlert","message","setTimeout","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bae5ccfb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capatalize(props.alert.type)}</strong>: {props.alert.msg}   \r\n          <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n              </li> */}\r\n              \r\n            </ul>\r\n            <div className=\"form-check form-switch text-light mx-2\" >\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n     aboutText: 'About text here'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n   const handleUpClick = ()=>{\r\n       console.log(\"Uppercase was clicked\" + text);\r\n       let newText = text.toUpperCase();\r\n       setText(newText)\r\n       props.showAlert(\"converted to uppercase!\" , \"success\");\r\n   }\r\n\r\n   const handleLoClick = ()=>{\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"converted to lowercase!\" , \"success\");\r\n}\r\n\r\n   const handleClearClick = ()=>{\r\n     console.log(\"Cleartext was clicked\" + text);\r\n     let newText = '';\r\n     setText(newText)\r\n     props.showAlert(\"text cleared!\" , \"success\");\r\n}\r\n   \r\n   const handleOnChange = (event)=>{\r\n       console.log(\"On change\");\r\n       setText(event.target.value)\r\n   }\r\n\r\n   const handleCopy = () => {\r\n       var text = document.getElementById(\"myBox\");\r\n       text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showAlert(\"copied to clipboard!\" , \"success\");\r\n   }\r\n\r\n   const handleExtraSpaces = () => {\r\n       let newText = text.split(/[ ]+/);\r\n       setText(newText.join(\" \"))\r\n       props.showAlert(\"extra space removed!\" , \"success\");\r\n   }\r\n\r\n   const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n       <>\r\n       <div>\r\n          <h1>{props.heading}</h1>  \r\n         <div className=\"mb-3\">\r\n         <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\"  rows=\"8\"></textarea> \r\n         </div>\r\n         <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n         <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n         <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n         <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n         <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n         \r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n       </>\r\n    )\r\n\r\n}\r\n","\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n//import {\n  //BrowserRouter as Router,\n  //Switch,\n  //Route,\n  //Link\n //} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  \n   \n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#2C394B';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n     {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode}  toggleMode={toggleMode} />\n       <Alert alert={alert}/>\n       <div className=\"container my-3\">\n       \n       {/*<Switch>*/}\n         {/* <Route path=\"/about\">*/}\n           {/* <About />*/}\n          {/*</Route>*/}\n      \n          {/*<Route path=\"/\">*/}\n          <TextForm showAlert={showAlert} heading = \"Enter the text to analyse\" mode={mode}/>\n          {/*</Route>*/}\n        {/*</Switch>*/}\n       \n       </div>\n      {/* </Router>*/}\n       \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}